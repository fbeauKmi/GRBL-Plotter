<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>字母高度</value>
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value>字母的高度</value>
  </data>
  <data name="btnApply.Text" xml:space="preserve">
    <value>创建G代码</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>行距</value>
  </data>
  <data name="label11.ToolTip" xml:space="preserve">
    <value>行间距离</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>字母距离</value>
  </data>
  <data name="label10.ToolTip" xml:space="preserve">
    <value>字母之间的额外空间</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>关</value>
  </data>
  <data name="cBToolTable.Text" xml:space="preserve">
    <value>从工具表获取值</value>
  </data>
  <data name="cBToolTable.ToolTip" xml:space="preserve">
    <value>在一个单词内，将字母的最后一个点与下一个字母的第一个点连接</value>
  </data>
  <data name="cBConnectLetter.Text" xml:space="preserve">
    <value>连接字母（仅限hershey）</value>
  </data>
  <data name="cBConnectLetter.ToolTip" xml:space="preserve">
    <value>在一个单词内，将字母的最后一个点与下一个字母的第一个点连接</value>
  </data>
  <data name="cBPauseLine.Text" xml:space="preserve">
    <value>在行前添加暂停</value>
  </data>
  <data name="cBPauseWord.Text" xml:space="preserve">
    <value>在单词前添加暂停</value>
  </data>
  <data name="cBPauseChar.Text" xml:space="preserve">
    <value>在字母前添加暂停</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>设置SVG导入中的其他G代码设置</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>从文本创建G代码</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>创建文本</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>字体信息</value>
  </data>
  <data name="cBLineBreak.Text" xml:space="preserve">
    <value>断行后（估计）</value>
  </data>
  <data name="cBLineBreak.ToolTip" xml:space="preserve">
    <value>估计单词长度，并在指定长度后添加换行符</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>工具：</value>
  </data>
  <data name="RbAlign3.Text" xml:space="preserve">
    <value>靠右</value>
  </data>
  <data name="RbAlign2.Text" xml:space="preserve">
    <value>居中</value>
  </data>
  <data name="RbAlign1.Text" xml:space="preserve">
    <value>靠左</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>G代码</value>
  </data>
  <data name="CbInsertCode.Text" xml:space="preserve">
    <value>将文本插入 2D 视图（在位置 0;0）</value>
  </data>
  <data name="CbOutline.Text" xml:space="preserve">
    <value>轮廓</value>
  </data>
  <data name="CbOutline.ToolTip" xml:space="preserve">
    <value>用影线填充图案填充字母，在[设置-图形导入-路径导入-路径修改]中定义</value>
  </data>
  <data name="CbHatchFill.Text" xml:space="preserve">
    <value>影线填充</value>
  </data>
  <data name="CbHatchFill.ToolTip" xml:space="preserve">
    <value>用影线填充图案填充字母，在[设置-图形导入-路径导入-路径修改]中定义</value>
  </data>
  <data name="CbWordWrap.Text" xml:space="preserve">
    <value>自动换行</value>
  </data>
  <data name="RbFont2.Text" xml:space="preserve">
    <value>系统字体</value>
  </data>
  <data name="RbFont1.Text" xml:space="preserve">
    <value>单行字体 (Hershey)</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>文本对齐</value>
  </data>
  <data name="BtnSelectFont.Text" xml:space="preserve">
    <value>选择字体</value>
  </data>
  <data name="LblFont.Text" xml:space="preserve">
    <value>字体：</value>
  </data>
  <data name="LblInfoFont.Text" xml:space="preserve">
    <value>字体</value>
  </data>
  <data name="LblInfoSize.Text" xml:space="preserve">
    <value>尺寸</value>
  </data>
  <data name="LblSize.Text" xml:space="preserve">
    <value>尺寸：</value>
  </data>
  <data name="LblWidth.Text" xml:space="preserve">
    <value>宽度：</value>
  </data>
  <data name="LblHeight.Text" xml:space="preserve">
    <value>高度：</value>
  </data>
  <data name="LblInfoWidth.Text" xml:space="preserve">
    <value>10000.00</value>
  </data>
  <data name="LblInfoWidth.ToolTip" xml:space="preserve">
    <value>使用当前字体大小和自动换行设置创建的 G 代码的文本宽度</value>
  </data>
  <data name="LblInfoHeight.Text" xml:space="preserve">
    <value>10000.00</value>
  </data>
  <data name="LblInfoHeight.ToolTip" xml:space="preserve">
    <value>使用当前字体大小和自动换行设置创建的G代码的文本高度</value>
  </data>
  <data name="linkLabel1.Text" xml:space="preserve">
    <value>免费字体</value>
  </data>
  <data name="linkLabel1.ToolTip" xml:space="preserve">
    <value>链接到“www.dafont.com” - 使用风险由您自行承担。</value>
  </data>
  <data name="NUDWidth.ToolTip" xml:space="preserve">
    <value>设置所需的文本宽度并调整字体大小以达到它。</value>
  </data>
  <data name="NUDHeight.ToolTip" xml:space="preserve">
    <value>设置所需的文本高度并调整字体大小以达到该高度。</value>
  </data>
  <data name="BtnSetWidth.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="BtnSetWidth.ToolTip" xml:space="preserve">
    <value>计算并设置字体大小以达到给定的文本宽度</value>
  </data>
  <data name="BtnSetHeight.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="BtnSetHeight.ToolTip" xml:space="preserve">
    <value>计算并设置字体大小以达到给定的文本高度</value>
  </data>
  <data name="BtnSaveIni.ToolTip" xml:space="preserve">
    <value>将此窗口的设置保存为 INI 文件</value>
  </data>
  <data name="BtnHelp.ToolTip" xml:space="preserve">
    <value>在线帮助</value>
  </data>
  <data name="cBImportGraphicNoise.Text" xml:space="preserve">
    <value>添加噪音</value>
  </data>
  <data name="cBImportGraphicNoise.ToolTip" xml:space="preserve">
    <value>生成摆动线，在【设置-图形导入-路径导入-路径修改】中设置</value>
  </data>
  <data name="button7.Text" xml:space="preserve">
    <value>LFF</value>
  </data>
  <data name="button6.Text" xml:space="preserve">
    <value>SVG2</value>
  </data>
  <data name="button5.Text" xml:space="preserve">
    <value>LFF4</value>
  </data>
  <data name="button4.Text" xml:space="preserve">
    <value>LFF3</value>
  </data>
  <data name="button3.Text" xml:space="preserve">
    <value>LFF2</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>LFF1</value>
  </data>
  <data name="button1.Text" xml:space="preserve">
    <value>SVG1</value>
  </data>
</root>