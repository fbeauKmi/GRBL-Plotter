<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Zeichenhöhe</value>
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value>Höhe der Buchstaben</value>
  </data>
  <data name="btnApply.Text" xml:space="preserve">
    <value>Erzeuge G-Code</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Zeilenabstand</value>
  </data>
  <data name="label11.ToolTip" xml:space="preserve">
    <value>Abstand zwischen Zeilen</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Zeichenabstand</value>
  </data>
  <data name="label10.ToolTip" xml:space="preserve">
    <value>Zusätzlicher Abstand zwischen Buchstaben</value>
  </data>
  <data name="cBToolTable.Text" xml:space="preserve">
    <value>Übernehme Werte aus Werkzeugliste</value>
  </data>
  <data name="cBToolTable.ToolTip" xml:space="preserve">
    <value>Verbinde letzten Punkt eines Buchstabens mit ersten Punkt des nächsten Buchstabens, innerhalb eines Wortes</value>
  </data>
  <data name="cBConnectLetter.Text" xml:space="preserve">
    <value>Verbinde Buchstaben (nur Hershey Font)</value>
  </data>
  <data name="cBConnectLetter.ToolTip" xml:space="preserve">
    <value>Verbinde letzten Punkt eines Buchstabens mit ersten Punkt des nächsten Buchstabens, innerhalb eines Wortes</value>
  </data>
  <data name="cBPauseLine.Text" xml:space="preserve">
    <value>Pause nach Zeile</value>
  </data>
  <data name="cBPauseWord.Text" xml:space="preserve">
    <value>Pause nach Wort</value>
  </data>
  <data name="cBPauseChar.Text" xml:space="preserve">
    <value>Pause nach Buchstaben</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Weitere G-Code Einstellungen
in Setup SVG-Import </value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Erzeuge G-Code aus Text</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Texterstellung</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Schriftinformationen</value>
  </data>
  <data name="cBLineBreak.Text" xml:space="preserve">
    <value>Zeilenumbruch nach (geschätzt)</value>
  </data>
  <data name="cBLineBreak.ToolTip" xml:space="preserve">
    <value>Schätzt die Wortlänge und fügt nach der angegebenen Länge einen Zeilenumbruch hinzu</value>
  </data>
  <data name="RbAlign3.Text" xml:space="preserve">
    <value>rechts</value>
  </data>
  <data name="RbAlign2.Text" xml:space="preserve">
    <value>mitte</value>
  </data>
  <data name="RbAlign1.Text" xml:space="preserve">
    <value>links</value>
  </data>
  <data name="CbInsertCode.Text" xml:space="preserve">
    <value>Text in 2D-Ansicht einfügen (an Position 0;0)</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Beenden</value>
  </data>
  <data name="CbOutline.Text" xml:space="preserve">
    <value>Umriss</value>
  </data>
  <data name="CbOutline.ToolTip" xml:space="preserve">
    <value>Buchstaben mit Schraffurfüllmuster füllen, definiert in [Setup - Grafikimport - Pfadimport - Pfadänderungen]</value>
  </data>
  <data name="CbHatchFill.Text" xml:space="preserve">
    <value>Schraffur</value>
  </data>
  <data name="CbHatchFill.ToolTip" xml:space="preserve">
    <value>Buchstaben mit Schraffurfüllmuster füllen, definiert in [Setup - Grafikimport - Pfadimport - Pfadänderungen]</value>
  </data>
  <data name="CbWordWrap.Text" xml:space="preserve">
    <value>Zeilenumbruch</value>
  </data>
  <data name="RbFont2.Text" xml:space="preserve">
    <value>Systemschrift</value>
  </data>
  <data name="RbFont1.Text" xml:space="preserve">
    <value>Einzeilige Schriftart (Hershey)</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Textausrichtung</value>
  </data>
  <data name="BtnSelectFont.Text" xml:space="preserve">
    <value>Schriftart auswählen</value>
  </data>
  <data name="LblFont.Text" xml:space="preserve">
    <value>Schriftart:</value>
  </data>
  <data name="LblInfoFont.Text" xml:space="preserve">
    <value>Schriftart</value>
  </data>
  <data name="LblInfoSize.Text" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="LblSize.Text" xml:space="preserve">
    <value>Größe:</value>
  </data>
  <data name="LblWidth.Text" xml:space="preserve">
    <value>Breite:</value>
  </data>
  <data name="LblHeight.Text" xml:space="preserve">
    <value>Höhe:</value>
  </data>
  <data name="LblInfoWidth.Text" xml:space="preserve">
    <value>10000,00</value>
  </data>
  <data name="LblInfoWidth.ToolTip" xml:space="preserve">
    <value>Textbreite des erstellten G-Codes mit aktueller Schriftgröße und Zeilenumbrucheinstellung</value>
  </data>
  <data name="LblInfoHeight.Text" xml:space="preserve">
    <value>10000,00</value>
  </data>
  <data name="LblInfoHeight.ToolTip" xml:space="preserve">
    <value>Texthöhe des erstellten G-Codes mit aktueller Schriftgröße und Zeilenumbrucheinstellung</value>
  </data>
  <data name="linkLabel1.Text" xml:space="preserve">
    <value>Kostenlose Schriftarten</value>
  </data>
  <data name="linkLabel1.ToolTip" xml:space="preserve">
    <value>Link zu 'www.dafont.com' - die Nutzung erfolgt auf eigene Gefahr.</value>
  </data>
  <data name="NUDWidth.ToolTip" xml:space="preserve">
    <value>Stellen Sie die gewünschte Textbreite ein und passen Sie die Schriftgröße an, um sie zu erreichen.</value>
  </data>
  <data name="NUDHeight.ToolTip" xml:space="preserve">
    <value>Stellen Sie die gewünschte Texthöhe ein und passen Sie die Schriftgröße an, um sie zu erreichen.</value>
  </data>
  <data name="BtnSetWidth.Text" xml:space="preserve">
    <value>einstellen</value>
  </data>
  <data name="BtnSetWidth.ToolTip" xml:space="preserve">
    <value>Berechnen und setzen Sie die Schriftgröße, um die angegebene Textbreite zu erreichen</value>
  </data>
  <data name="BtnSetHeight.Text" xml:space="preserve">
    <value>einstellen</value>
  </data>
  <data name="BtnSetHeight.ToolTip" xml:space="preserve">
    <value>Berechnen und setzen Sie die Schriftgröße, um die angegebene Texthöhe zu erreichen</value>
  </data>
  <data name="BtnSaveIni.ToolTip" xml:space="preserve">
    <value>Speichert die Einstellungen dieses Fensters als INI-Datei</value>
  </data>
  <data name="BtnHelp.ToolTip" xml:space="preserve">
    <value>Onlinehilfe</value>
  </data>
  <data name="cBImportGraphicNoise.Text" xml:space="preserve">
    <value>Rauschen hinzufügen</value>
  </data>
  <data name="cBImportGraphicNoise.ToolTip" xml:space="preserve">
    <value>Erzeugt wackelige Linien, Einstellungen in [Setup – Grafikimport – Pfadimport – Pfadänderungen]</value>
  </data>
</root>