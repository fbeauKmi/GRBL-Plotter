<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Hauteur de la lettre</value>
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value>Hauteur des lettres</value>
  </data>
  <data name="btnApply.Text" xml:space="preserve">
    <value>Créer un G-Code</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>interligne</value>
  </data>
  <data name="label11.ToolTip" xml:space="preserve">
    <value>Distance entre les lignes</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Distance lettre</value>
  </data>
  <data name="label10.ToolTip" xml:space="preserve">
    <value>Espace supplémentaire entre les lettres</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>proche</value>
  </data>
  <data name="cBToolTable.Text" xml:space="preserve">
    <value>Obtenir des valeurs de la table d'outils</value>
  </data>
  <data name="cBToolTable.ToolTip" xml:space="preserve">
    <value>En un mot, reliez le dernier point de la lettre au premier point de la lettre suivante</value>
  </data>
  <data name="cBConnectLetter.Text" xml:space="preserve">
    <value>Connecter des lettres (seulement pour eux)</value>
  </data>
  <data name="cBConnectLetter.ToolTip" xml:space="preserve">
    <value>En un mot, reliez le dernier point de la lettre au premier point de la lettre suivante</value>
  </data>
  <data name="cBPauseLine.Text" xml:space="preserve">
    <value>Ajouter une pause avant la ligne</value>
  </data>
  <data name="cBPauseWord.Text" xml:space="preserve">
    <value>Ajouter une pause avant mot</value>
  </data>
  <data name="cBPauseChar.Text" xml:space="preserve">
    <value>Ajouter une pause avant la lettre</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Autres paramètres G-Code dans Setup SVG-Import</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Créer un G-Code à partir d'un texte</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Création de texte</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Informations sur la police</value>
  </data>
  <data name="cBLineBreak.Text" xml:space="preserve">
    <value>Saut de ligne après (estimé)</value>
  </data>
  <data name="cBLineBreak.ToolTip" xml:space="preserve">
    <value>Estime la longueur du mot et ajoute un saut de ligne après la longueur spécifiée</value>
  </data>
  <data name="RbAlign3.Text" xml:space="preserve">
    <value>À droite</value>
  </data>
  <data name="RbAlign2.Text" xml:space="preserve">
    <value>centre</value>
  </data>
  <data name="RbAlign1.Text" xml:space="preserve">
    <value>La gauche</value>
  </data>
  <data name="CbInsertCode.Text" xml:space="preserve">
    <value>Insérer du texte dans la vue 2D (à la position 0;0)</value>
  </data>
  <data name="CbOutline.Text" xml:space="preserve">
    <value>Contour</value>
  </data>
  <data name="CbOutline.ToolTip" xml:space="preserve">
    <value>Remplir les lettres avec un motif de remplissage hachuré, défini dans [Configuration - Importation de graphiques - Importation de chemin - Modifications de chemin]</value>
  </data>
  <data name="CbHatchFill.Text" xml:space="preserve">
    <value>Remplissage hachuré</value>
  </data>
  <data name="CbHatchFill.ToolTip" xml:space="preserve">
    <value>Remplir les lettres avec un motif de remplissage hachuré, défini dans [Configuration - Importation de graphiques - Importation de chemin - Modifications de chemin]</value>
  </data>
  <data name="CbWordWrap.Text" xml:space="preserve">
    <value>Retour à la ligne</value>
  </data>
  <data name="RbFont2.Text" xml:space="preserve">
    <value>Police système</value>
  </data>
  <data name="RbFont1.Text" xml:space="preserve">
    <value>Police à une seule ligne (Hershey)</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Alignement du texte</value>
  </data>
  <data name="BtnSelectFont.Text" xml:space="preserve">
    <value>Sélectionnez la police</value>
  </data>
  <data name="LblFont.Text" xml:space="preserve">
    <value>Police de caractère:</value>
  </data>
  <data name="LblInfoFont.Text" xml:space="preserve">
    <value>Police de caractère</value>
  </data>
  <data name="LblInfoSize.Text" xml:space="preserve">
    <value>Taille</value>
  </data>
  <data name="LblSize.Text" xml:space="preserve">
    <value>Taille:</value>
  </data>
  <data name="LblWidth.Text" xml:space="preserve">
    <value>Largeur:</value>
  </data>
  <data name="LblHeight.Text" xml:space="preserve">
    <value>Hauteur:</value>
  </data>
  <data name="LblInfoWidth.Text" xml:space="preserve">
    <value>10000.00</value>
  </data>
  <data name="LblInfoWidth.ToolTip" xml:space="preserve">
    <value>Largeur du texte du G-Code créé avec la taille de police actuelle et le réglage de retour à la ligne</value>
  </data>
  <data name="LblInfoHeight.Text" xml:space="preserve">
    <value>10000.00</value>
  </data>
  <data name="LblInfoHeight.ToolTip" xml:space="preserve">
    <value>Hauteur du texte du G-Code créé avec la taille de police actuelle et le réglage de retour à la ligne</value>
  </data>
  <data name="linkLabel1.Text" xml:space="preserve">
    <value>Polices gratuites</value>
  </data>
  <data name="linkLabel1.ToolTip" xml:space="preserve">
    <value>Lien vers 'www.dafont.com' - l'utilisation est à vos risques et périls.</value>
  </data>
  <data name="NUDWidth.ToolTip" xml:space="preserve">
    <value>Définissez la largeur de texte souhaitée et adaptez la taille de la police pour l'atteindre.</value>
  </data>
  <data name="NUDHeight.ToolTip" xml:space="preserve">
    <value>Définissez la hauteur de texte souhaitée et adaptez la taille de la police pour l'atteindre.</value>
  </data>
  <data name="BtnSetWidth.Text" xml:space="preserve">
    <value>Positionner</value>
  </data>
  <data name="BtnSetWidth.ToolTip" xml:space="preserve">
    <value>Calculer et définir la taille de la police pour atteindre la largeur de texte donnée</value>
  </data>
  <data name="BtnSetHeight.Text" xml:space="preserve">
    <value>Positionner</value>
  </data>
  <data name="BtnSetHeight.ToolTip" xml:space="preserve">
    <value>Calculer et définir la taille de la police pour atteindre la hauteur de texte donnée</value>
  </data>
  <data name="BtnSaveIni.ToolTip" xml:space="preserve">
    <value>Enregistre les paramètres de cette fenêtre sous forme de fichier INI</value>
  </data>
  <data name="BtnHelp.ToolTip" xml:space="preserve">
    <value>Aide en ligne</value>
  </data>
  <data name="cBImportGraphicNoise.Text" xml:space="preserve">
    <value>Ajoute du bruit</value>
  </data>
  <data name="cBImportGraphicNoise.ToolTip" xml:space="preserve">
    <value>Génère des lignes bancales, paramètres dans [Configuration - Importation de graphiques - Importation de chemin - Modifications de chemin]</value>
  </data>
</root>