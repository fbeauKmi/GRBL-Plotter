<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Definisci l'area per scansionare le informazioni sull'altezza</value>
    <comment>GroupBox</comment>
  </data>
  <data name="RbScanY.Text" xml:space="preserve">
    <value>Scansiona Y, estrudi X</value>
  </data>
  <data name="RbScanX.Text" xml:space="preserve">
    <value>Scansiona X, estrudi Y</value>
  </data>
  <data name="CbExtrudeEnable.Text" xml:space="preserve">
    <value>Sonda un asse, estrudi l'altro</value>
  </data>
  <data name="CbRoundUp.Text" xml:space="preserve">
    <value>Arrotondare</value>
  </data>
  <data name="BtnPosFromCodeDimension.Text" xml:space="preserve">
    <value>Dimensioni da GCode caricato</value>
  </data>
  <data name="BtnMoveUR.Text" xml:space="preserve">
    <value>Passa a 🡵</value>
  </data>
  <data name="BtnMoveLL.Text" xml:space="preserve">
    <value>Passa a 🡷</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Dimensioni griglia X e Y (larghezza poltiglia)</value>
  </data>
  <data name="btnPosUR.Text" xml:space="preserve">
    <value>Ottieni Pos. 🡵</value>
    <comment>Button</comment>
  </data>
  <data name="btnPosUR.ToolTip" xml:space="preserve">
    <value>Ottieni la posizione effettiva della macchina e imposta le coordinate in alto a destra</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnPosLL.Text" xml:space="preserve">
    <value>Ottieni Pos. 🡷</value>
    <comment>Button</comment>
  </data>
  <data name="btnPosLL.ToolTip" xml:space="preserve">
    <value>Ottieni la posizione effettiva della macchina e imposta le coordinate in basso a sinistra</value>
    <comment>ToolTip</comment>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>🡷 In basso a sinistra</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>🡘🡙 Lunghezza bordo</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>🡵 In alto a destra</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>profondità massima</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Risparmia altezza</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Z Velocità di avanzamento</value>
  </data>
  <data name="btnOffset.Text" xml:space="preserve">
    <value>impostare max. valore = 0,0</value>
    <comment>Button</comment>
  </data>
  <data name="btnOffset.ToolTip" xml:space="preserve">
    <value>Rimuovere l'offset da tutti i valori Z</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnStartHeightScan.Text" xml:space="preserve">
    <value>Genera mappa altezza</value>
    <comment>Button</comment>
  </data>
  <data name="btnStartHeightScan.ToolTip" xml:space="preserve">
    <value>Invia comandi di scansione della mappa dell'altezza</value>
    <comment>ToolTip</comment>
  </data>
  <data name="lblProgress.Text" xml:space="preserve">
    <value>Finito</value>
  </data>
  <data name="lblMin.Text" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="lblMax.Text" xml:space="preserve">
    <value>max</value>
  </data>
  <data name="lblMid.Text" xml:space="preserve">
    <value>metà</value>
  </data>
  <data name="btnApply.Text" xml:space="preserve">
    <value>Applicare la mappa dell'altezza</value>
    <comment>Button</comment>
  </data>
  <data name="btnApply.ToolTip" xml:space="preserve">
    <value>Applica la mappa dell'altezza a G-Code nella finestra principale</value>
    <comment>ToolTip</comment>
  </data>
  <data name="loadHeightMapToolStripMenuItem.Text" xml:space="preserve">
    <value>Carica la mappa dell'altezza</value>
    <comment>Menu</comment>
  </data>
  <data name="saveHeightMapToolStripMenuItem.Text" xml:space="preserve">
    <value>Salva la mappa dell'altezza</value>
    <comment>Menu</comment>
  </data>
  <data name="savePictureAsBWBMPToolStripMenuItem.Text" xml:space="preserve">
    <value>Esportare</value>
    <comment>Menu</comment>
  </data>
  <data name="savePictureAsBMPToolStripMenuItem.Text" xml:space="preserve">
    <value>Salva immagine come BMP</value>
    <comment>Menu</comment>
  </data>
  <data name="saveMapAsSTLToolStripMenuItem.Text" xml:space="preserve">
    <value>Salva mappa come STL</value>
    <comment>Menu</comment>
  </data>
  <data name="saveMapAsOBJToolStripMenuItem.Text" xml:space="preserve">
    <value>Salva mappa come OBJ</value>
  </data>
  <data name="saveMapAsX3DToolStripMenuItem.Text" xml:space="preserve">
    <value>Salva mappa come X3D</value>
    <comment>Menu</comment>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Risultato</value>
    <comment>GroupBox</comment>
  </data>
  <data name="cBGray.Text" xml:space="preserve">
    <value>Scala di grigi</value>
    <comment>CheckBox</comment>
  </data>
  <data name="cBGray.ToolTip" xml:space="preserve">
    <value>Mostra l'immagine del risultato in scala di grigi per un ulteriore utilizzo come immagine della mappa ad alta quota</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnOffsetZ.Text" xml:space="preserve">
    <value>Spostamento Z</value>
    <comment>Button</comment>
  </data>
  <data name="btnOffsetZ.ToolTip" xml:space="preserve">
    <value>Aggiungi l'offset dato a tutti i valori Z</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnZoomZ.Text" xml:space="preserve">
    <value>Zoom Z</value>
  </data>
  <data name="btnZoomZ.ToolTip" xml:space="preserve">
    <value>Moltiplica tutti i valori Z per il valore dato</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnInvertZ.Text" xml:space="preserve">
    <value>Inverti Z</value>
    <comment>Button</comment>
  </data>
  <data name="btnInvertZ.ToolTip" xml:space="preserve">
    <value>Cambia il segno dei valori Z</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnCutOffZ.Text" xml:space="preserve">
    <value>Z Tagliare !!!</value>
    <comment>Button</comment>
  </data>
  <data name="btnCutOffZ.ToolTip" xml:space="preserve">
    <value>Tagliare i valori Z al di sotto del valore dato. Meglio salvare i dati prima di usare cut off!</value>
    <comment>ToolTip</comment>
  </data>
  <data name="btnGCode.Text" xml:space="preserve">
    <value>Genera codice G</value>
    <comment>Button</comment>
  </data>
  <data name="btnGCode.ToolTip" xml:space="preserve">
    <value>Genera G-Code per ripercorrere la mappa dell'altezza</value>
    <comment>ToolTip</comment>
  </data>
  <data name="gB_Manipulation.Text" xml:space="preserve">
    <value>Manipolazione</value>
    <comment>GroupBox</comment>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Area da scansionare</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Velocità di avanzamento XY</value>
  </data>
  <data name="CbUseG1.Text" xml:space="preserve">
    <value>Usa G1 per il movimento XY (altrimenti G0)</value>
  </data>
  <data name="RbProbingDiy.Text" xml:space="preserve">
    <value>Da controllo fai-da-te</value>
  </data>
  <data name="RbProbingZ.Text" xml:space="preserve">
    <value>Asse Z (G38.3Z)</value>
  </data>
  <data name="GbProbing.Text" xml:space="preserve">
    <value>Sondaggio, selezionare la sorgente per il valore Z</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Sondaggio</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>Manipolazione dei risultati</value>
  </data>
  <data name="tabPage4.Text" xml:space="preserve">
    <value>Produzione</value>
  </data>
  <data name="LblConnected.Text" xml:space="preserve">
    <value>Controllo fai da te non connesso</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Utilizza l'ultimo valore Z ricevuto "(PRB:Zxxx)" da DIY-Control come informazioni sulla profondità.
(xxx = valore Z)</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Scansione di superficie</value>
  </data>
  <data name="sTLToolStripMenuItem.Text" xml:space="preserve">
    <value>Importa il profilo dell'altezza da STL</value>
  </data>
  <data name="importToolStripMenuItem.Text" xml:space="preserve">
    <value>Importare</value>
  </data>
  <data name="CbInterpolate.Text" xml:space="preserve">
    <value>Interpolare</value>
  </data>
  <data name="CbNewStepWidth.Text" xml:space="preserve">
    <value>Larghezza del passo individuale</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>Nota: per fresare la mappa di altezza, il valore massimo deve essere uguale o minore di zero.</value>
  </data>
  <data name="nUDCutOffZ.ToolTip" xml:space="preserve">
    <value>Dopo l'importazione STL, verrà visualizzato il secondo valore più piccolo</value>
  </data>
  <data name="RbScanYX.ToolTip" xml:space="preserve">
    <value>Colonna per colonna a zig-zag</value>
  </data>
  <data name="RbScanXY.ToolTip" xml:space="preserve">
    <value>Riga per riga a zig-zag</value>
  </data>
</root>